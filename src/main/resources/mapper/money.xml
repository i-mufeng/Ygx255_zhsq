<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.example.dao.MoneyDAO">
  <resultMap type="money" id="moneyMap">
    <id property="moneyid" column="moneyid" />
    <result property="mno" column="mno" />
    <result property="usersid" column="usersid" />
    <result property="houseid" column="houseid" />
    <result property="programsid" column="programsid" />
    <result property="money" column="money" />
    <result property="addtime" column="addtime" />
    <result property="status" column="status" />
    <result property="memo" column="memo" />
    <result property="username" column="username" />
    <result property="houseno" column="houseno" />
    <result property="programsname" column="programsname" />
  </resultMap>
  <!-- 插入语句 DAO通过id调用此配置 -->
  <insert id="insertMoney" parameterType="money">
    insert into money(moneyid , mno , usersid , houseid , programsid , money , addtime , status , memo ) values(#{moneyid} , #{mno} , #{usersid} , #{houseid} ,
    #{programsid} , #{money} , #{addtime} , #{status} , #{memo} )
  </insert>
  <!-- 更新语句 DAO通过id调用此配置 -->
  <update id="updateMoney" parameterType="money">
    update money set mno=#{mno} , usersid=#{usersid} , houseid=#{houseid} , programsid=#{programsid} , money=#{money} , addtime=#{addtime} , status=#{status} ,
    memo=#{memo} where moneyid=#{moneyid}
  </update>
  <!-- 按主键删除 DAO通过id调用此配置 -->
  <delete id="deleteMoney" parameterType="String">
    delete from money where moneyid = #{moneyid}
  </delete>
  <!-- 查询全部信息 DAO通过id调用此配置 -->
  <select id="getAllMoney" resultMap="moneyMap">
    select a.* , b.username , c.houseno , d.programsname from money a , users b , house c , programs d where a.usersid = b.usersid and a.houseid = c.houseid and
    a.programsid = d.programsid order by moneyid desc
  </select>

  <!-- 按主键查询 DAO通过id调用此配置 -->
  <select id="getMoneyById" parameterType="String" resultMap="moneyMap">
    select a.* , b.username , c.houseno , d.programsname from money a , users b , house c , programs d where a.usersid = b.usersid and a.houseid = c.houseid and
    a.programsid = d.programsid and moneyid=#{moneyid} order by moneyid desc
  </select>
  <!-- 按条件精确查询 DAO通过id调用此配置 -->
  <select id="getMoneyByCond" parameterType="money" resultMap="moneyMap">
    select a.* , b.username , c.houseno , d.programsname from money a , users b , house c , programs d where a.usersid = b.usersid and a.houseid = c.houseid and
    a.programsid = d.programsid
    <if test="mno != null and '' != mno">
      and a.mno = #{mno}
    </if>
    <if test="usersid != null and '' != usersid">
      and a.usersid = #{usersid}
    </if>
    <if test="houseid != null and '' != houseid">
      and a.houseid = #{houseid}
    </if>
    <if test="programsid != null and '' != programsid">
      and a.programsid = #{programsid}
    </if>
    <if test="money != null and '' != money">
      and a.money = #{money}
    </if>
    <if test="addtime != null and '' != addtime">
      and a.addtime = #{addtime}
    </if>
    <if test="status != null and '' != status">
      and a.status = #{status}
    </if>
    <if test="memo != null and '' != memo">
      and a.memo = #{memo}
    </if>
  </select>
  <!-- 按条件模糊查询 DAO通过id调用此配置 -->
  <select id="getMoneyByLike" parameterType="money" resultMap="moneyMap">
    select a.* , b.username , c.houseno , d.programsname from money a , users b , house c , programs d where a.usersid = b.usersid and a.houseid = c.houseid and
    a.programsid = d.programsid
    <if test="mno != null and '' != mno">
      and a.mno like CONCAT('%', CONCAT(#{mno}, '%'))
    </if>
    <if test="usersid != null and '' != usersid">
      and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
    </if>
    <if test="houseid != null and '' != houseid">
      and c.houseno like CONCAT('%', CONCAT(#{houseid}, '%'))
    </if>
    <if test="programsid != null and '' != programsid">
      and d.programsname like CONCAT('%', CONCAT(#{programsid}, '%'))
    </if>
    <if test="money != null and '' != money">
      and a.money like CONCAT('%', CONCAT(#{money}, '%'))
    </if>
    <if test="addtime != null and '' != addtime">
      and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
    </if>
    <if test="status != null and '' != status">
      and a.status like CONCAT('%', CONCAT(#{status}, '%'))
    </if>
    <if test="memo != null and '' != memo">
      and a.memo like CONCAT('%', CONCAT(#{memo}, '%'))
    </if>
  </select>
</mapper>





























